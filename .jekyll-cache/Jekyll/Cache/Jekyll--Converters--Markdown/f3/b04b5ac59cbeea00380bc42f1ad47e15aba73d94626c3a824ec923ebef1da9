I"πE<h1 id="classifiers-visi√≥n-general">Classifiers Visi√≥n General</h1>

<p>Google Earth Engine ofrece a los usuarios la oportunidad de realizar muchos an√°lisis avanzados, como la spectral un-mixing, object-based methods, eigen analysis and linear modeling.  Tambi√©n se dispone de t√©cnicas de machine learning para la clasificaci√≥n supervisada y no supervisada. En este ejemplo, utilizaremos la clasificaci√≥n supervisada para la clasificaci√≥n de la cobertura terrestre.</p>

<p>El prop√≥sito es obtener un mapa clasificado de la cobertura terrestre en un √°rea de inter√©s. Examinaremos las im√°genes Landsat e identificaremos manualmente un conjunto de puntos de entrenamiento para tres clases (agua, bosque, urbano). Luego usaremos esos puntos para entrenar un clasificador. El algor√≠tmo se utilizar√° para clasificar el resto de la imagen Landsat en esas tres categor√≠as. Finalmente, podremos evaluar la precisi√≥n de nuestra clasificaci√≥n usando <code class="language-plaintext highlighter-rouge">classifier.confusionMatrix()</code>.</p>

<p>Enlace al c√≥digo completo que usaremos en esta sesi√≥n:
<a href="https://code.earthengine.google.com/84027208bf2a94e77b5f14075fc5a938">https://code.earthengine.google.com/84027208bf2a94e77b5f14075fc5a938</a></p>

<p><em>Adaptado de <a href="https://developers.google.com/earth-engine/classification">Earth Engine 201 Intermediate workshop</a></em></p>

<h1 id="ejercicio-clasificar-la-cobertura-del-suelo-usando-las-im√°genes-landsat">Ejercicio: Clasificar la cobertura del suelo usando las im√°genes Landsat</h1>

<h3 id="delimitar-un-√°rea-de-inter√©s-roi-a-partir-de-coordenadas">Delimitar un √°rea de inter√©s (ROI) a partir de coordenadas</h3>

<p>Primero, necesitamos definir una regi√≥n de inter√©s (ROI). En lugar de utilizar un Asset importado, utilizaremos una √∫nica coordenada que definiremos manualmente. Estamos interesado en hacer una clasificaci√≥n alrededor de Houston, as√≠ que usar√© el centro de la ciudad como mi lat/lon.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="c1">// Define a region of interest as a point.  Change the coordinates</span>
<span class="c1">// to select an ROI in your area of interest.</span>
<span class="c1">// You can use the inspector tool to find your coordinates</span>
<span class="kd">var</span> <span class="nx">roi</span> <span class="o">=</span> <span class="nx">ee</span><span class="p">.</span><span class="nx">Geometry</span><span class="p">.</span><span class="nx">Point</span><span class="p">(</span><span class="o">-</span><span class="mf">95.6223</span><span class="p">,</span> <span class="mf">29.7381</span><span class="p">);</span></code></pre></figure>

<h3 id="cargar-una-imagecollection-ya-filtrarla-para-obtener-una-sola-im√°gen">Cargar una <code class="language-plaintext highlighter-rouge">ImageCollection</code> ya filtrarla para obtener una sola im√°gen</h3>

<p>Ahora cargaremos las im√°genes de Landsat y filtraremos el √°rea y las fechas de inter√©s.  Podemos usar <code class="language-plaintext highlighter-rouge">sort</code> para filtrar la <code class="language-plaintext highlighter-rouge">ImageCollection</code> por el % de cobertura de nubes, una propiedad incluida en la Landsat Top of Atmosphere (TOA) collection. Luego seleccionamos la <code class="language-plaintext highlighter-rouge">Image</code> que presente menor nubosidad<code class="language-plaintext highlighter-rouge">first</code> de la <code class="language-plaintext highlighter-rouge">ImageCollection</code> ordenada.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="c1">// Load the Landsat 8 scaled radiance image collection.</span>
<span class="kd">var</span> <span class="nx">landsatCollection</span> <span class="o">=</span> <span class="nx">ee</span><span class="p">.</span><span class="nx">ImageCollection</span><span class="p">(</span><span class="dl">'</span><span class="s1">LANDSAT/LC08/C01/T1</span><span class="dl">'</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">filterDate</span><span class="p">(</span><span class="dl">'</span><span class="s1">2017-01-01</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">2017-12-31</span><span class="dl">'</span><span class="p">);</span>

<span class="c1">// Make a cloud-free composite.</span>
<span class="kd">var</span> <span class="nx">composite</span> <span class="o">=</span> <span class="nx">ee</span><span class="p">.</span><span class="nx">Algorithms</span><span class="p">.</span><span class="nx">Landsat</span><span class="p">.</span><span class="nx">simpleComposite</span><span class="p">({</span>
  <span class="na">collection</span><span class="p">:</span> <span class="nx">landsatCollection</span><span class="p">,</span>
  <span class="na">asFloat</span><span class="p">:</span> <span class="kc">true</span>
<span class="p">});</span>

<span class="c1">// Visualize the Composite</span>
<span class="nb">Map</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span><span class="nx">composite</span><span class="p">,</span> <span class="p">{</span><span class="na">bands</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">B4</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">B3</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">B2</span><span class="dl">'</span><span class="p">],</span> <span class="na">max</span><span class="p">:</span> <span class="mf">0.5</span><span class="p">,</span> <span class="na">gamma</span><span class="p">:</span> <span class="mi">2</span><span class="p">},</span> <span class="dl">'</span><span class="s1">L8 Image</span><span class="dl">'</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span></code></pre></figure>

<h3 id="seleccionar-la-data-de-entrenamiento">Seleccionar la data de entrenamiento</h3>

<p>El segundo paso es recoger datos de entrenamiento.  Usando las im√°genes como gu√≠a, pasa por encima de la casilla ‚ÄòGeometry Imports‚Äô junto a la herramienta de dibujo de geometr√≠as y haz clic en ‚Äò+ new layer‚Äô.  Cada nueva capa representa una clase dentro de los datos de entrenamiento. Dejemos que la primera capa nueva represente ‚Äòurban‚Äô.</p>

<p>Localice puntos en la nueva capa en √°reas urbanas o edificadas (edificios, carreteras, aparcamientos, etc.).  Cuando termine de recolectar los puntos, haga clic en ‚ÄòExit‚Äô y configure la importaci√≥n (parte superior del script) de la siguiente manera.  Nombrar la capa ‚Äòurban‚Äô y hacer clic en el icono para configurarla.  ‚ÄòImport as‚Äô <code class="language-plaintext highlighter-rouge">FeatureCollection</code>.  ‚ÄòAdd property‚Äô landcover y establecer su valor a 0. (Las clases subsiguientes ser√°n 1 para el agua, 2 para el bosque, etc.) cuando termine, haga clic en ‚ÄòOK‚Äô como se muestra:</p>

<p><br />
<img src="../fig/03_geomConfig.png" border="10" width="50%" height="50%" />
<br /><br /></p>

<p>Cuando termines de hacer una <code class="language-plaintext highlighter-rouge">FeatureCollection</code> para cada clase (3 en total), puedes fusionarlas en una <code class="language-plaintext highlighter-rouge">FeatureCollection</code> usando <code class="language-plaintext highlighter-rouge">featureCollection.merge()</code>. Esto lo convertir√° en una colecci√≥n en la que la propiedad <strong>landcover</strong> tiene un valor que es la clase (0, 1, 2).</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="c1">// Merge points together</span>
<span class="kd">var</span> <span class="nx">newfc</span> <span class="o">=</span> <span class="nx">water</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="nx">urban</span><span class="p">).</span><span class="nx">merge</span><span class="p">(</span><span class="nx">forest</span><span class="p">);</span>
<span class="nx">print</span><span class="p">(</span><span class="nx">newfc</span><span class="p">,</span> <span class="dl">'</span><span class="s1">newfc</span><span class="dl">'</span><span class="p">)</span></code></pre></figure>

<p>La declaraci√≥n impresa mostrar√° la nueva colecci√≥n en la <strong>Console</strong>.</p>

<h3 id="realizar-el-muestreo-de-la-im√°gen-usando-puntos-de-entrenamiento">Realizar el muestreo de la im√°gen usando puntos de entrenamiento</h3>

<p>Ahora que has creado los puntos y sus etiquetas, necesitas probar las im√°genes Landsat 8 usando <code class="language-plaintext highlighter-rouge">image.sampleRegions()</code>. Este comando extraer√° la reflectancia en las bandas designadas para cada uno de los puntos que has creado. Un diagrama conceptual de esto se muestra en la imagen de abajo. Usaremos la reflectancia de las bandas √≥pticas, NIR y SWIR (B2 - B7).</p>

<p><br />
<img src="../fig/03_classificationsample.png" border="10" width="30%" height="30%" />
<br /><br /></p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="c1">// Select the bands for training</span>
<span class="kd">var</span> <span class="nx">bands</span> <span class="o">=</span> <span class="p">[</span><span class="dl">'</span><span class="s1">B2</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">B3</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">B4</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">B5</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">B6</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">B7</span><span class="dl">'</span><span class="p">];</span>

<span class="c1">// Sample the input imagery to get a FeatureCollection of training data.</span>
<span class="kd">var</span> <span class="nx">training</span> <span class="o">=</span> <span class="nx">composite</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">bands</span><span class="p">).</span><span class="nx">sampleRegions</span><span class="p">({</span>
  <span class="na">collection</span><span class="p">:</span> <span class="nx">newfc</span><span class="p">,</span>
  <span class="na">properties</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">landcover</span><span class="dl">'</span><span class="p">],</span>
  <span class="na">scale</span><span class="p">:</span> <span class="mi">30</span>
<span class="p">});</span></code></pre></figure>

<p>The <code class="language-plaintext highlighter-rouge">FeatureCollection</code> called <strong>training</strong> has the reflectance value from each band stored for every training point along with its class label.
La <code class="language-plaintext highlighter-rouge">FeatureCollection</code> llamada <strong>training</strong> tiene el valor de reflectancia de cada banda almacenado para cada punto de entrenamiento junto con su etiqueta de clase.</p>

<h3 id="entrenar-el-clasificador">Entrenar el clasificador</h3>
<p>We will now instantiate a <code class="language-plaintext highlighter-rouge">classifier</code> using <code class="language-plaintext highlighter-rouge">ee.Classifier.randomForest()</code> and <code class="language-plaintext highlighter-rouge">train</code> it on the training data specifying the features to use (training), the landcover categories as the <code class="language-plaintext highlighter-rouge">classProperty</code> we want to categorize the imagery into, and the reflectance in B2 - B7 of the Landsat imagery as the <code class="language-plaintext highlighter-rouge">inputProperties</code>.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="c1">// Make a Random Forest classifier and train it.</span>
<span class="kd">var</span> <span class="nx">classifier</span> <span class="o">=</span> <span class="nx">ee</span><span class="p">.</span><span class="nx">Classifier</span><span class="p">.</span><span class="nx">randomForest</span><span class="p">().</span><span class="nx">train</span><span class="p">({</span>
  <span class="na">features</span><span class="p">:</span> <span class="nx">training</span><span class="p">,</span>
  <span class="na">classProperty</span><span class="p">:</span> <span class="dl">'</span><span class="s1">landcover</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">inputProperties</span><span class="p">:</span> <span class="nx">bands</span>
<span class="p">});</span></code></pre></figure>

<p>Other classifiers, including Support Vector Machines (SVM) and Classification and Regression Trees (CART) are available in Earth Engine. See the <a href="https://developers.google.com/earth-engine/classification">Supervised Classification User Guide</a> for more examples.</p>

<h3 id="clasificar-la-im√°gen-y-plotear-los-resultados">Clasificar la im√°gen y plotear los resultados</h3>

<p>Use the new <code class="language-plaintext highlighter-rouge">classifier</code> to classify the rest of the imagery.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="c1">// Classify the input imagery.</span>
<span class="kd">var</span> <span class="nx">classified</span> <span class="o">=</span> <span class="nx">composite</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">bands</span><span class="p">).</span><span class="nx">classify</span><span class="p">(</span><span class="nx">classifier</span><span class="p">);</span>

<span class="c1">// Define a palette for the Land Use classification.</span>
<span class="kd">var</span> <span class="nx">palette</span> <span class="o">=</span> <span class="p">[</span>
  <span class="dl">'</span><span class="s1">D3D3D3</span><span class="dl">'</span><span class="p">,</span> <span class="c1">// urban (0)  // grey</span>
  <span class="dl">'</span><span class="s1">0000FF</span><span class="dl">'</span><span class="p">,</span> <span class="c1">// water (1)  // blue</span>
  <span class="dl">'</span><span class="s1">008000</span><span class="dl">'</span> <span class="c1">//  forest (2) // green</span>
<span class="p">];</span>

<span class="c1">// Display the classification result and the input image.</span>
<span class="nb">Map</span><span class="p">.</span><span class="nx">setCenter</span><span class="p">(</span><span class="o">-</span><span class="mf">96.0171</span><span class="p">,</span> <span class="mf">29.6803</span><span class="p">);</span>
<span class="nb">Map</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span><span class="nx">classified</span><span class="p">,</span> <span class="p">{</span><span class="na">min</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="na">max</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="na">palette</span><span class="p">:</span> <span class="nx">palette</span><span class="p">},</span> <span class="dl">'</span><span class="s1">Land Use Classification</span><span class="dl">'</span><span class="p">);</span></code></pre></figure>

<p>You should get an image that looks sort of like the one below. Pan around the map and use the inspector to and see how you did!</p>

<p><br />
<img src="../fig/03_classified.png" border="10" width="100%" height="100%" />
<br /><br /></p>

<h3 id="evaluar-la-precisi√≥n">Evaluar la precisi√≥n</h3>

<p>We can assess the accuracy of the trained <code class="language-plaintext highlighter-rouge">classifier</code> using a <code class="language-plaintext highlighter-rouge">confusionMatrix</code>.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="c1">// Get a confusion matrix representing resubstitution accuracy.</span>
<span class="nx">print</span><span class="p">(</span><span class="dl">'</span><span class="s1">RF error matrix: </span><span class="dl">'</span><span class="p">,</span> <span class="nx">classifier</span><span class="p">.</span><span class="nx">confusionMatrix</span><span class="p">());</span>
<span class="nx">print</span><span class="p">(</span><span class="dl">'</span><span class="s1">RF accuracy: </span><span class="dl">'</span><span class="p">,</span> <span class="nx">classifier</span><span class="p">.</span><span class="nx">confusionMatrix</span><span class="p">().</span><span class="nx">accuracy</span><span class="p">());</span></code></pre></figure>

<p>Word of warning: In this particular example, we are just looking at the <code class="language-plaintext highlighter-rouge">trainAccuracy</code>, which basically describes how well the <code class="language-plaintext highlighter-rouge">classifier</code> was able to correctly label resubstituted training data, i.e. data the <code class="language-plaintext highlighter-rouge">classifier</code> had already seen. To get a true validation accurcay, we need to show the classifier new ‚Äòtesting‚Äô data. The repository code has a bonus section at the end that holds out data for testing, applies the classifier to the testing data and assesses the <code class="language-plaintext highlighter-rouge">errorMatrix</code> for this withheld validation data. The last example in the <a href="https://developers.google.com/earth-engine/classification">Supervised Classification User Guide</a> also gives example code for this process.</p>
:ET