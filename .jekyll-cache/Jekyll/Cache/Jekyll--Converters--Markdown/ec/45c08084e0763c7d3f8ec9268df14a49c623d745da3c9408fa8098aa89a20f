I"
'<h1 id="pre-requisitos">Pre-requisitos</h1>

<p>Por favor, complete este el procedimiento antes de tomar las lecciones. Siga los pasos que se indican a continuación para registrarse en una cuenta de Google Earth Engine y uúase a nuestro repositorio compartido.</p>

<h3 id="1-registering-for-a-google-earth-engine-account">1. Registering for a Google Earth Engine account</h3>

<ul>
  <li>Go the the <a href="https://signup.earthengine.google.com/#!/">GEE sign up page</a> and enter &gt; the email you want to use for your GEE account. A gmail is best if you have one.</li>
  <li>Enter your email, your affiliation and country/region. Where it asks what you want to accomplish, mention you are at Geohackweek at the University of Washington.</li>
  <li>Review the terms, verify your non-robot identify and click ‘Submit’.</li>
  <li>Check your email, including your spam folder, for a link from the Google Developer’s Team. The confirmation email will have directions on how to access the Code Editor.</li>
</ul>

<p>Not sure if you have access? Use <a href="https://code.earthengine.google.com/">this link</a> to check. If you didn’t get access you will get an authorization error that says your account isn’t registered. If you do have access, the link will open up the Javascript IDE. This link is your permanent portal to GEE access.</p>

<h3 id="2-joining-our-shared-gee-code-repository">2. Joining our shared GEE code repository</h3>

<p>Google Earth Engine allows you to have shared group folders/repositories for scripts. We’ve organized the code presented in this tutorial this way. Instead of adding each of your emails one at a time (tedious!), you will instead join a google group that will then allow you access to the shared code repository. Please follow these steps:</p>

<ul>
  <li>Join the Geohackweek Google Earth Engine Tutorial Google group by clicking this link <a href="https://goo.gl/JsnWZH" target="_blank">https://goo.gl/JsnWZH</a> . Don’t worry about posting permissions; we won’t  be posting anything.</li>
  <li>Accept the shared repository by clicking this link:
  <a href="https://code.earthengine.google.com/?accept_repo=users/victorialy/geohackweek2019 " target="_blank">https://code.earthengine.google.com/?accept_repo=users/victorialy/geohackweek2019</a></li>
  <li>In the code editor, go to the <strong>Scripts tab</strong> in the top left panel, scroll down and expand the “Reader” section. A directory called <em>users/victorialy/geohackweek2019</em> should appear with read-only versions of the full scripts from each episode.</li>
</ul>

<p>Test Link:</p>

<h3 id="3-javascript-tips">3. Javascript Tips</h3>

<p>JavaScript, not to be confused with Java, is a programming language widely used in web development alongside HTML and CSS. You can teach yourself JavaScript using any number of online tutorials, such as those offered by <a href="https://www.w3schools.com/js/" target="_blank">w3schools</a> .</p>

<p>At geohackweek, we access Google Earth Engine by entering JavaScript commands into an online integrated development environment (IDE) called the Code Editor. It is not necessary to formally learn JavaScript to work with Google Earth Engine. Below we provide examples and resources for getting started.</p>

<h4 id="basic-javascript-for-gee">Basic JavaScript for GEE</h4>
<p>Here are a few basics useful for GEE, reproduced from the <a href="https://docs.google.com/document/d/1ZxRKMie8dfTvBmUNOO0TFMkd7ELGWf3WjX0JvESZdOE/edit" target="_blank">Earth Engine 101 Beginner’s Curriculum</a>.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="c1">// Line comments start with two forward slashes. Like this line.</span>

<span class="cm">/* Multi-line comments start with a forward slash and a star,
and end with a star and a forward slash. */</span></code></pre></figure>

<p>Variables are used to store objects and are defined using the keyword <strong>var</strong>.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">theAnswer</span> <span class="o">=</span> <span class="mi">42</span><span class="p">;</span>

<span class="c1">// string objects start and end with a single quote</span>
<span class="kd">var</span> <span class="nx">myVariable</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">I am a string</span><span class="dl">'</span><span class="p">;</span>

<span class="c1">// string objects can also use double quotes, but don't mix and match</span>
<span class="kd">var</span> <span class="nx">myOtherVariable</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">I am also a string</span><span class="dl">"</span><span class="p">;</span></code></pre></figure>

<p>Statements should end in a semi-colon, or the editor complains.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">test</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">I feel incomplete...</span><span class="dl">'</span>
<span class="kd">var</span> <span class="nx">test2</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">I feel complete!</span><span class="dl">'</span><span class="p">;</span></code></pre></figure>

<p>Passing function parameters and using lists</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="c1">// Parentheses are used to pass parameters to functions</span>
<span class="nx">print</span><span class="p">(</span><span class="dl">'</span><span class="s1">This string will print in the Console tab.</span><span class="dl">'</span><span class="p">);</span>

<span class="cm">/* Square brackets are used for items in a list.
The zero index refers to the first item in a list*/</span>
<span class="kd">var</span> <span class="nx">myList</span> <span class="o">=</span> <span class="p">[</span><span class="dl">'</span><span class="s1">eggplant</span><span class="dl">'</span><span class="p">,</span><span class="dl">'</span><span class="s1">apple</span><span class="dl">'</span><span class="p">,</span><span class="dl">'</span><span class="s1">wheat</span><span class="dl">'</span><span class="p">];</span>
<span class="nx">print</span><span class="p">(</span><span class="nx">myList</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span> <span class="c1">// would print 'eggplant'</span></code></pre></figure>

<p>Using dictionaries</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="c1">// Curly brackets (or braces) can be used to define dictionaries (key:value pairs).</span>
<span class="kd">var</span> <span class="nx">myDict</span> <span class="o">=</span> <span class="p">{</span><span class="dl">'</span><span class="s1">food</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">bread</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">color</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">red</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">number</span><span class="dl">'</span><span class="p">:</span><span class="mi">42</span><span class="p">};</span>

<span class="c1">// Square brackets can be used to access dictionary items by key.</span>
<span class="nx">print</span><span class="p">(</span><span class="nx">myDict</span><span class="p">[</span><span class="dl">'</span><span class="s1">color</span><span class="dl">'</span><span class="p">]);</span>

<span class="c1">//Or you can use the dot notation to get the same result.</span>
<span class="nx">print</span><span class="p">(</span><span class="nx">myDict</span><span class="p">.</span><span class="nx">color</span><span class="p">);</span></code></pre></figure>

<p>Functions can be defined as a way to reuse code and make it easier to read.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">myHelloFunction</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">string</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="dl">'</span><span class="s1">Hello </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">string</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">!</span><span class="dl">'</span><span class="p">;</span>
<span class="p">};</span>
<span class="nx">print</span><span class="p">(</span><span class="nx">myHelloFunction</span><span class="p">(</span><span class="dl">'</span><span class="s1">world</span><span class="dl">'</span><span class="p">));</span></code></pre></figure>

<h4 id="other-javascript-resources">Other JavaScript Resources</h4>
<p>JavaScript uses camelCase. JavaScript (according to W3 academy) is easy to learn. Like other programming languages, you can use style guides to learn how to write standard, reproducible (marketable!) code.</p>

<p>For in-depth industry guidance, Google publishes their own definitive <a href="http://google.github.io/styleguide/jsguide.html" target="_blank">JavaScript style guide</a>.</p>

<p>Dana Tomlin has also created a short <a href="https://drive.google.com/file/d/0B3H1GYZLzLKCckwwVjZfVmdPNDA/view)" target="_blank">JavaScript Quick Start Guide/a&gt; which only takes a few minutes to work through but hits some of the basics. You can find it clicking that link or by going to the GEE homepage, clicking on the EDU tab in the upper left, and scrolling down to the Geospatial Software Design Exercises section.</a></p>

<p><br />
<img src="../fig/00_spaceland.png" border="10" />
<br /><br /></p>
:ET